apply plugin: 'groovy'
apply plugin: 'maven-publish'

dependencies {
	compile gradleApi()
	compile localGroovy()
	compile 'com.intellij:annotations:132.839-PATCH1'
	compile 'org.eclipse.persistence:eclipselink:2.7.3'
	compile 'com.sun.xml.bind:jaxb-core:2.2.11'
	compile 'com.sun.xml.bind:jaxb-xjc:2.2.11'
	compile 'com.sun.xml.bind:jaxb-impl:2.2.11'
	compile 'javax.xml.bind:jaxb-api:2.2.12-b141001.1542'
	compile 'gradle-templates:gradle-templates:1.5.1'
	compile 'junit:junit:4.4'

	compile 'org.eclipse.persistence:org.eclipse.persistence.moxy:2.7.3'
	compile 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.7'
	compile 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'

	compile 'com.google.guava:guava-gwt:16.0.1'
	compile 'com.google.gwt.inject:gin:1.5.0'
	compile 'com.gwtplatform:gwtp-all:0.8-PATCH5'
	compile 'com.google.gwt:gwt-dev:2.5.1'
	compile 'com.google.gwt:gwt-servlet:2.5.1'
	compile 'com.google.gwt:gwt-user:2.5.1'
}

repositories {
	maven {
		url 'https://proxy.artifacts.cloudbees.com/repository/mirror'
		credentials {
			username = System.getenv('NEXUS_USERNAME') ?: nexusUsername
			password = System.getenv('NEXUS_PASSWORD') ?: nexusPassword
		}
	}
	//maven { url "http://art.nimbus.beescloud.com/artifactory/jcenter" }
	//maven { url "http://art.nimbus.beescloud.com/artifactory/bintray" }
}

// Set generated plugin class files to be compatible with JDK6
tasks.withType(GroovyCompile) {
	sourceCompatibility = 1.6
	targetCompatibility = 1.6
}

group='com.electriccloud.plugins'
version='2.4'

task wrapper(type: Wrapper) { gradleVersion = '2.13' }

publishing {
	repositories { maven { url "$buildDir/repo" } }

	publications {
		maven(MavenPublication) {
			from components.java
			pom {
				scm {
					connection = "scm:git:ssh://github.com/electric-cloud/flow-gradle-plugin.git"
					developerConnection = "scm:git:ssh://github.com/electric-cloud/flow-gradle-plugin.git"
					url = "https://github.com/electric-cloud/flow-gradle-plugin/"
					if (project.version.endsWith('-SNAPSHOT')) {
						tag = "HEAD"
					} else {
						tag = "v${project.version}"
					}
				}
		}
	}

	repositories {
		maven {
			credentials {
				username = System.getenv('NEXUS_USERNAME') ?: nexusUsername
				password = System.getenv('NEXUS_PASSWORD') ?: nexusPassword
			}

			if(project.version.endsWith('-SNAPSHOT')) {
				url "https://artifacts.cloudbees.com/repository/maven-snapshots/"
			} else {
				url "https://artifacts.cloudbees.com/repository/maven-private-releases/"
			}
		}
	}
}

task getURLofDependencyArtifact() {
	doFirst {
		project.configurations.compile.dependencies.each { dependency ->
			for (ArtifactRepository repository : project.repositories.asList()) {
				def url = repository.properties.get('url')
				//https://repo.maven.apache.org/maven2/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar
				def jarUrl = String.format("%s%s/%s/%s/%s-%s.jar", url.toString(),
					dependency.group?.replace('.', '/'), dependency.name, dependency.version,
					dependency.name, dependency.version)
				try {
					def jarfile = new URL(jarUrl)
					def inStream = jarfile.openStream();
					if (inStream != null) {
						println(String.format("%s:%s:%s", dependency.group, dependency.name, dependency.version)
							+ " -> " + jarUrl)
						return
					}
				} catch (Exception ignored) {
				}
			}
		}
	}
}

